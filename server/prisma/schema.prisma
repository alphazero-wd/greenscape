// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String   @db.VarChar(20)
  lastName  String   @db.VarChar(30)
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roles     Role[]   @default([User])
}

model File {
  id    String @id
  url   String
  image Image?
}

model Category {
  id               Int        @id @default(autoincrement())
  slug             String     @unique @db.VarChar(60)
  name             String     @db.VarChar(60)
  parentCategoryId Int?
  parentCategory   Category?  @relation("CategoriesToSubcategories", fields: [parentCategoryId], references: [id], onDelete: Cascade)
  subCategories    Category[] @relation("CategoriesToSubcategories")

  products Product[]
}

model Image {
  fileId    String  @id
  file      File    @relation(fields: [fileId], references: [id], onDelete: Cascade)
  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(120)
  slug      String   @unique
  desc      String
  price     Float
  inStock   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    Status   @default(Active)

  images     Image[]
  categories Category[]

  orders OrdersOnProducts[]
}

model Order {
  id           String    @id
  customer     String
  email        String
  phone        String
  line1        String?
  line2        String?
  state        String?
  city         String?
  postalCode   String?
  country      String?
  total        Int
  shippingCost Int
  tax          Int
  cardType     String
  cardLast4    String
  createdAt    DateTime  @default(now())
  deliveredAt  DateTime?

  products OrdersOnProducts[]
}

model OrdersOnProducts {
  productId Int
  orderId   String
  qty       Int

  product Product @relation(fields: [productId], references: [id])
  order   Order   @relation(fields: [orderId], references: [id])

  @@id([productId, orderId])
}

enum Role {
  User
  Admin
}

enum Status {
  Active
  Draft
  Archived
}
